{"ast":null,"code":"var _jsxFileName = \"/Users/mart/Documents/code/cinemaSave/client/src/components/MovieSM.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport movieFunctions from \"../api/index\";\nimport { ReactSession } from 'react-client-session'; // style sheets\n\nimport './moviesm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieSM = props => {\n  _s();\n\n  const userid = ReactSession.get(\"userid\");\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    movieFunctions.getByID({\n      'movie_id': id,\n      'user_id': userid\n    }).then(response => {\n      console.log('promise fulfilled');\n      let req = response.data;\n      return req;\n    }).then(req => {\n      // setMovie(req)\n      console.log(req);\n    });\n  }, []);\n\n  const handleButtonClick = e => {\n    fetch('http://localhost:3060/authentication/profile/addpin/', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'movie_id': id,\n        'user_id': userid\n      })\n    }).then(response => {\n      let req = response.json();\n      return req;\n    });\n  };\n\n  let genres = movie.genre + '';\n  genres = genres.split(',');\n  const allgenres = genres.map(i => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre\",\n      children: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-show-pg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"poster\",\n          src: movie.poster,\n          alt: `${movie.title} poster`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick({\n            'movieID': movie._id,\n            'userID': userid\n          }),\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-desrip-show\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.imdbRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"allgenres\",\n          children: allgenres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: movie.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"languages: \", movie.languages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Watch it here: \", movie.stream]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MovieSM, \"09I2k64dOJWMIaxJxT7GcoAbwrg=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieSM;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieSM\");","map":{"version":3,"sources":["/Users/mart/Documents/code/cinemaSave/client/src/components/MovieSM.jsx"],"names":["useParams","React","useEffect","useState","movieFunctions","ReactSession","MovieSM","props","userid","get","id","movie","setMovie","getByID","then","response","console","log","req","data","handleButtonClick","e","fetch","method","headers","body","JSON","stringify","json","genres","genre","split","allgenres","map","i","poster","title","_id","imdbRating","description","languages","stream"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react'\nimport movieFunctions from \"../api/index\"\nimport { ReactSession } from 'react-client-session';\n\n// style sheets\nimport './moviesm.css';\n\nexport const MovieSM = (props) => {\n    const userid = ReactSession.get(\"userid\");\n    const { id } = useParams();\n    const [movie, setMovie] = useState([]);\n      useEffect(() => {\n        movieFunctions\n          .getByID({\n            'movie_id': id,\n            'user_id': userid\n          })\n          .then((response) => {\n              console.log('promise fulfilled')\n              let req = response.data\n              return req\n          })\n        .then((req) => {\n            // setMovie(req)\n            console.log(req)\n          })\n      }, []);\n\n    const handleButtonClick = (e) => {\n      fetch('http://localhost:3060/authentication/profile/addpin/', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'movie_id': id,\n          'user_id': userid\n        })\n      }).then((response) => {\n        let req = response.json()\n        return req\n      })\n  }\n\n  let genres = movie.genre + ''\n  genres = genres.split(',')\n \n  const allgenres= genres.map((i) => {\n    return (\n      <div className='genre'>\n        { i }\n      </div>)\n  });\n\n    return (\n      <div className=\"movie-show-pg\">\n        <div className=\"movie-container-row\">\n          <div className=\"div-left\">\n            <img className=\"poster\" src={movie.poster} alt={`${movie.title} poster`} />\n            <button onClick={() => handleButtonClick({ 'movieID': movie._id, 'userID': userid })}>save</button>\n          </div>\n          <div className=\"movie-desrip-show\">\n            <h1>{movie.title}</h1>\n            <h3>{movie.imdbRating}</h3>\n            <div className=\"allgenres\">{allgenres}</div>\n            <h4>{movie.description}</h4>\n            <h5>languages: {movie.languages}</h5>\n        \n            <h5>Watch it here: { movie.stream }</h5>\n          </div>\n        </div>\n      </div>\n\n    );\n}\n"]},"metadata":{},"sourceType":"module"}