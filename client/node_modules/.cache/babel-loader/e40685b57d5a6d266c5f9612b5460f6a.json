{"ast":null,"code":"var _jsxFileName = \"/Users/mart/Documents/code/cinemaSave/client/src/components/BoardPopup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ReactSession } from 'react-client-session';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BoardPopup = props => {\n  _s();\n\n  const [boardname, setBoardName] = useState('');\n  const [boarddescrip, setBoardDescrip] = useState('');\n  const [boardID, setBoardID] = useState('');\n  const [popupBool, setPopupBool] = useState(Boolean);\n  const userid = ReactSession.get(\"userid\");\n\n  const handleSaveButton = () => {\n    console.log(boardname);\n    const data = {\n      'title': boardname,\n      'description': boarddescrip,\n      'userID': userid\n    };\n    fetch('http://localhost:3060/authentication/profile/addboard/', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      return response.json();\n    }).then(response => {\n      setBoardID(response);\n    }).then(response => {\n      setPopupBool(true);\n    });\n  };\n\n  if (popupBool) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: {\n        pathname: `/profile/${userid}/board/${boardID}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (props.value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"boardname\",\n        children: \"Name your board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"boardname\",\n        onChange: e => setBoardName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"boarddescrip\",\n        children: \"Give your board a description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"boarddescrip\",\n        onChange: e => setBoardDescrip(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveButton,\n        children: \" save \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n}; // onChange={(e) => setPassword(e.target.value)\n\n_s(BoardPopup, \"98ecJ7EC7Qu/TKSVzD7TNCwYrJ8=\");\n\n_c = BoardPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardPopup\");","map":{"version":3,"sources":["/Users/mart/Documents/code/cinemaSave/client/src/components/BoardPopup.jsx"],"names":["React","useState","ReactSession","Navigate","BoardPopup","props","boardname","setBoardName","boarddescrip","setBoardDescrip","boardID","setBoardID","popupBool","setPopupBool","Boolean","userid","get","handleSaveButton","console","log","data","fetch","method","headers","body","JSON","stringify","then","response","json","pathname","value","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ReactSession } from 'react-client-session';\nimport { Navigate } from 'react-router-dom';\n\nexport const BoardPopup = (props) => {\n    const [boardname, setBoardName] = useState('');\n    const [boarddescrip, setBoardDescrip] = useState('');\n    const [boardID, setBoardID] = useState('');\n    const [popupBool, setPopupBool] = useState(Boolean);\n    const userid = ReactSession.get(\"userid\");\n\n    const handleSaveButton = () => { \n        console.log(boardname)\n        const data = {\n            'title': boardname,\n            'description': boarddescrip,\n            'userID': userid\n        }\n\n        fetch('http://localhost:3060/authentication/profile/addboard/', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data)\n        }).then((response) => {\n            return response.json()\n        }).then((response) => { \n            setBoardID(response)\n        }).then((response) => { \n            setPopupBool(true)\n        })\n    }\n\n    if (popupBool) { \n        \n        return <Navigate to={{\n            pathname: `/profile/${userid}/board/${boardID}`\n            }}\n        />\n    }\n\n    if (props.value) {\n        return (\n            <div>\n                <label htmlFor=\"boardname\">Name your board</label>\n                <br />\n                <input\n                    type=\"text\"\n                    id='boardname'\n                    onChange={(e) => setBoardName(e.target.value)}\n                />\n                <br />\n                <br />\n                <label htmlFor=\"boarddescrip\">Give your board a description</label>\n                <br />\n                <input\n                    type=\"text\"\n                    id='boarddescrip'\n                    onChange={(e) => setBoardDescrip(e.target.value)}\n                />\n                <br />\n                <br />\n                <button onClick={handleSaveButton}> save </button>\n            </div>\n        )\n    }\n    else { \n        return (\n            <div></div>\n        )\n    }\n}\n// onChange={(e) => setPassword(e.target.value)"]},"metadata":{},"sourceType":"module"}