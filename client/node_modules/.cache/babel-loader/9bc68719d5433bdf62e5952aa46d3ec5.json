{"ast":null,"code":"import _slicedToArray from\"/Users/mart/Documents/code/cinemaSave/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{ReactSession}from'react-client-session';import{Navigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var BoardPopup=function BoardPopup(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),boardname=_useState2[0],setBoardName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),boarddescrip=_useState4[0],setBoardDescrip=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),boardID=_useState6[0],setBoardID=_useState6[1];var _useState7=useState(Boolean),_useState8=_slicedToArray(_useState7,2),popupBool=_useState8[0],setPopupBool=_useState8[1];var userid=ReactSession.get(\"userid\");var handleSaveButton=function handleSaveButton(){console.log(boardname);var data={'title':boardname,'description':boarddescrip,'userID':userid};fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/addboard/',{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)}).then(function(response){return response.json();}).then(function(response){setBoardID(response);}).then(function(response){setPopupBool(true);});};if(popupBool){return/*#__PURE__*/_jsx(Navigate,{to:{pathname:\"/profile/\".concat(userid,\"/board/\").concat(boardID)}});}if(props.value){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"boardname\",children:\"Name your board\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"boardname\",onChange:function onChange(e){return setBoardName(e.target.value);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"boarddescrip\",children:\"Give your board a description\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"boarddescrip\",onChange:function onChange(e){return setBoardDescrip(e.target.value);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveButton,children:\" save \"})]});}else{return/*#__PURE__*/_jsx(\"div\",{});}};// onChange={(e) => setPassword(e.target.value)","map":{"version":3,"sources":["/Users/mart/Documents/code/cinemaSave/client/src/components/BoardPopup.jsx"],"names":["React","useState","ReactSession","Navigate","BoardPopup","props","boardname","setBoardName","boarddescrip","setBoardDescrip","boardID","setBoardID","Boolean","popupBool","setPopupBool","userid","get","handleSaveButton","console","log","data","fetch","method","headers","body","JSON","stringify","then","response","json","pathname","value","e","target"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,YAAT,KAA6B,sBAA7B,CACA,OAASC,QAAT,KAAyB,kBAAzB,C,wFAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACjC,cAAkCJ,QAAQ,CAAC,EAAD,CAA1C,wCAAOK,SAAP,eAAkBC,YAAlB,eACA,eAAwCN,QAAQ,CAAC,EAAD,CAAhD,yCAAOO,YAAP,eAAqBC,eAArB,eACA,eAA8BR,QAAQ,CAAC,EAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eACA,eAAkCV,QAAQ,CAACW,OAAD,CAA1C,yCAAOC,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,MAAM,CAAGb,YAAY,CAACc,GAAb,CAAiB,QAAjB,CAAf,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BC,OAAO,CAACC,GAAR,CAAYb,SAAZ,EACA,GAAMc,CAAAA,IAAI,CAAG,CACT,QAASd,SADA,CAET,cAAeE,YAFN,CAGT,SAAUO,MAHD,CAAb,CAMAM,KAAK,CAAC,+EAAD,CAAkF,CACnFC,MAAM,CAAE,MAD2E,CAEnFC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAF0E,CAGnFC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAH6E,CAAlF,CAAL,CAIGO,IAJH,CAIQ,SAACC,QAAD,CAAc,CAClB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAND,EAMGF,IANH,CAMQ,SAACC,QAAD,CAAc,CAClBjB,UAAU,CAACiB,QAAD,CAAV,CACH,CARD,EAQGD,IARH,CAQQ,SAACC,QAAD,CAAc,CAClBd,YAAY,CAAC,IAAD,CAAZ,CACH,CAVD,EAWH,CAnBD,CAqBA,GAAID,SAAJ,CAAe,CAEX,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,CACjBiB,QAAQ,oBAAcf,MAAd,mBAA8BL,OAA9B,CADS,CAAd,EAAP,CAIH,CAED,GAAIL,KAAK,CAAC0B,KAAV,CAAiB,CACb,mBACI,oCACI,cAAO,OAAO,CAAC,WAAf,6BADJ,cAEI,aAFJ,cAGI,cACI,IAAI,CAAC,MADT,CAEI,EAAE,CAAC,WAFP,CAGI,QAAQ,CAAE,kBAACC,CAAD,QAAOzB,CAAAA,YAAY,CAACyB,CAAC,CAACC,MAAF,CAASF,KAAV,CAAnB,EAHd,EAHJ,cAQI,aARJ,cASI,aATJ,cAUI,cAAO,OAAO,CAAC,cAAf,2CAVJ,cAWI,aAXJ,cAYI,cACI,IAAI,CAAC,MADT,CAEI,EAAE,CAAC,cAFP,CAGI,QAAQ,CAAE,kBAACC,CAAD,QAAOvB,CAAAA,eAAe,CAACuB,CAAC,CAACC,MAAF,CAASF,KAAV,CAAtB,EAHd,EAZJ,cAiBI,aAjBJ,cAkBI,aAlBJ,cAmBI,eAAQ,OAAO,CAAEd,gBAAjB,oBAnBJ,GADJ,CAuBH,CAxBD,IAyBK,CACD,mBACI,cADJ,CAGH,CACJ,CAlEM,CAmEP","sourcesContent":["import React, { useState } from 'react';\nimport { ReactSession } from 'react-client-session';\nimport { Navigate } from 'react-router-dom';\n\nexport const BoardPopup = (props) => {\n    const [boardname, setBoardName] = useState('');\n    const [boarddescrip, setBoardDescrip] = useState('');\n    const [boardID, setBoardID] = useState('');\n    const [popupBool, setPopupBool] = useState(Boolean);\n    const userid = ReactSession.get(\"userid\");\n\n    const handleSaveButton = () => { \n        console.log(boardname)\n        const data = {\n            'title': boardname,\n            'description': boarddescrip,\n            'userID': userid\n        }\n\n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/addboard/', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data)\n        }).then((response) => {\n            return response.json()\n        }).then((response) => { \n            setBoardID(response)\n        }).then((response) => { \n            setPopupBool(true)\n        })\n    }\n\n    if (popupBool) { \n        \n        return <Navigate to={{\n            pathname: `/profile/${userid}/board/${boardID}`\n            }}\n        />\n    }\n\n    if (props.value) {\n        return (\n            <div>\n                <label htmlFor=\"boardname\">Name your board</label>\n                <br />\n                <input\n                    type=\"text\"\n                    id='boardname'\n                    onChange={(e) => setBoardName(e.target.value)}\n                />\n                <br />\n                <br />\n                <label htmlFor=\"boarddescrip\">Give your board a description</label>\n                <br />\n                <input\n                    type=\"text\"\n                    id='boarddescrip'\n                    onChange={(e) => setBoardDescrip(e.target.value)}\n                />\n                <br />\n                <br />\n                <button onClick={handleSaveButton}> save </button>\n            </div>\n        )\n    }\n    else { \n        return (\n            <div></div>\n        )\n    }\n}\n// onChange={(e) => setPassword(e.target.value)"]},"metadata":{},"sourceType":"module"}