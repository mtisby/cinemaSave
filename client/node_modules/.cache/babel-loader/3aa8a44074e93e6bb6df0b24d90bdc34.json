{"ast":null,"code":"var _jsxFileName = \"/Users/mart/Documents/code/cinemaSave/client/src/pages/ShowIndBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport { ReactSession } from 'react-client-session';\nimport React, { useEffect, useState } from 'react';\nimport movieFunctions from \"../api/index.js\";\nimport { EditBoardPopup } from '../components/EditBoardPopup.jsx';\nimport { Navbar } from '../components/Navbar.jsx';\nimport { PinReccomendations } from '../components/PinReccomendations.jsx'; // style sheets\n\nimport './profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShowIndBoard() {\n  _s();\n\n  const userid = ReactSession.get(\"userid\");\n  let boardID = window.location.pathname.split('/board/')[1];\n  const [board, setBoard] = useState([]);\n  const [pins, setPins] = useState([]);\n  const [showPopup, setShowPopup] = useState(Boolean);\n\n  const handleSave = props => {\n    fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/addpin/', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(props)\n    }).then(response => {\n      return response.json();\n    }).then(response => {\n      setPins(response.pins);\n    });\n  };\n\n  const handleRemove = props => {\n    fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/deletepin/', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(props)\n    }).then(response => {\n      response = response.json();\n      return response;\n    }).then(data => {\n      setBoard(data.boards);\n      setPins(data.pins);\n    });\n  };\n\n  const handleEdit = () => {\n    setShowPopup(true);\n  };\n\n  useEffect(() => {\n    movieFunctions.getProfileBoard(userid, boardID).then(response => {\n      return response.data;\n    }).then(response => {\n      setBoard(response);\n      setPins(response.pins);\n    });\n  }, []);\n  const [movie, setMovies] = useState([]);\n  useEffect(() => {\n    movieFunctions.getAll(userid).then(response => {\n      setMovies(response.data);\n    });\n  }, []);\n  const boardPins = pins.slice(0).reverse().map(function (movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-movies\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster,\n        alt: `${movie.title} poster`,\n        className: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-descrip\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"imdb: \", movie.imdbRating, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"genre(s): \", movie.genre, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-btn\",\n        onClick: () => handleRemove({\n          'movieID': movie._id,\n          'userID': userid,\n          'boardID': boardID\n        }),\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showBoard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"edit board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(EditBoardPopup, {\n          value: showPopup,\n          data: {\n            'userID': userid,\n            'boardID': boardID\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [board.title, \" Board\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: board.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Pins, {\n        pins: pins,\n        component: boardPins\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Here are some suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-contianer\",\n        children: /*#__PURE__*/_jsxDEV(PinReccomendations, {\n          userid: userid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowIndBoard, \"C2AkurKtefbnt33gGhSN9ca87DE=\");\n\n_c = ShowIndBoard;\n\nfunction Pins(props) {\n  const pins = props.pins;\n  {\n    if (pins.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"get started by adding pins to this board!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boards-container\",\n        children: props.component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\n\n_c2 = Pins;\nexport default ShowIndBoard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowIndBoard\");\n$RefreshReg$(_c2, \"Pins\");","map":{"version":3,"sources":["/Users/mart/Documents/code/cinemaSave/client/src/pages/ShowIndBoard.jsx"],"names":["ReactSession","React","useEffect","useState","movieFunctions","EditBoardPopup","Navbar","PinReccomendations","ShowIndBoard","userid","get","boardID","window","location","pathname","split","board","setBoard","pins","setPins","showPopup","setShowPopup","Boolean","handleSave","props","fetch","method","headers","body","JSON","stringify","then","response","json","handleRemove","data","boards","handleEdit","getProfileBoard","movie","setMovies","getAll","boardPins","slice","reverse","map","poster","title","imdbRating","genre","_id","description","Pins","length","component"],"mappings":"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","sourcesContent":["import { ReactSession } from 'react-client-session';\nimport React, { useEffect, useState } from 'react';\nimport movieFunctions from \"../api/index.js\";\nimport { EditBoardPopup } from '../components/EditBoardPopup.jsx';\nimport { Navbar } from '../components/Navbar.jsx';\nimport { PinReccomendations } from '../components/PinReccomendations.jsx';\n\n// style sheets\nimport './profile.css';\n\nfunction ShowIndBoard() {\n    const userid = ReactSession.get(\"userid\");\n    let boardID = window.location.pathname.split('/board/')[1];\n    const [board, setBoard] = useState([]);\n    const [pins, setPins] = useState([]);\n    const [showPopup, setShowPopup] = useState(Boolean);\n\n    const handleSave = (props) => {\n\n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/addpin/', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(props)\n        }).then((response) => {\n            return response.json()\n        }).then((response) => {\n            setPins(response.pins)\n        })\n    }\n\n    const handleRemove = (props) => {\n\n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/deletepin/', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(props)\n        })\n        .then((response) => {\n            response = response.json()\n            return response\n        }).then((data) => {\n            setBoard(data.boards)\n            setPins(data.pins)\n        })\n    }\n\n    const handleEdit = () => { \n        setShowPopup(true)\n    }\n\n    useEffect(() => {\n        movieFunctions\n            .getProfileBoard(userid, boardID)\n            .then((response) => {\n                return response.data\n            })\n            .then((response) => {\n                setBoard(response)\n                setPins(response.pins)\n            })\n    }, []);\n\n\n    const [movie, setMovies] = useState([]);\n    useEffect(() => {\n        movieFunctions\n            .getAll(userid)\n            .then((response) => {\n                setMovies(response.data)\n            })\n    }, []);\n\n    const boardPins = pins.slice(0).reverse().map(function (movie) {\n        return (\n       <div className='board-movies'>\n           <img src={movie.poster} alt={ `${movie.title} poster`} className='poster'/>\n            <div className='movie-descrip'>\n                <h3>{movie.title}</h3>\n                <h5>imdb: { movie.imdbRating } </h5>\n                <h5>genre(s): { movie.genre } </h5>\n            </div>\n            <button className='save-btn' onClick={() => handleRemove({ 'movieID': movie._id, 'userID': userid, 'boardID': boardID })}>remove</button>\n       </div>\n        )\n    })\n\n  return (\n    <div>\n        <Navbar />\n          <div className=\"showBoard\">\n            <div className='menu'>\n                <button onClick={handleEdit}>edit board</button>\n                  <EditBoardPopup value={ showPopup } data={ { 'userID': userid, 'boardID': boardID } }/>  \n            </div>\n            \n            <h1>{board.title} Board</h1>\n            <h3>{board.description}</h3>\n              \n            <Pins pins={pins} component={ boardPins }/>\n\n            <h2>Here are some suggestions</h2>\n            <div className='movies-contianer'>\n                <PinReccomendations userid= { userid }/>\n            </div>\n        </div>\n    </div>\n  );\n}\n\n\nfunction Pins(props) {\n    const pins = props.pins\n    {\n        if (pins.length === 0) {\n            return (\n                <div>\n                    <p>get started by adding pins to this board!</p>\n                </div>\n            )\n        } else {\n            return (\n                <div className='boards-container'>\n                    {props.component}\n                </div>\n            )\n        }\n    }\n\n}\n\nexport default ShowIndBoard;"]},"metadata":{},"sourceType":"module"}