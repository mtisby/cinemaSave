{"ast":null,"code":"var _jsxFileName = \"/Users/mart/Documents/code/cinemaSave/client/src/components/MovieSM.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport movieFunctions from \"../api/index\";\nimport { ReactSession } from 'react-client-session'; // style sheets\n\nimport './moviesm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieSM = props => {\n  _s();\n\n  const userid = ReactSession.get(\"userid\");\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [streamMovie, setStreamMovie] = useState([]);\n  useEffect(() => {\n    movieFunctions.getByID({\n      'movie_id': id,\n      'user_id': userid\n    }).then(response => {\n      console.log('promise fulfilled');\n      let res = response.data;\n      return res;\n    }).then(res => {\n      setMovie(res.movie);\n      setStreamMovie(res.streamMovie);\n      console.log(res);\n    });\n  }, []);\n\n  const handleButtonClick = e => {\n    fetch('http://localhost:3060/authentication/profile/addpin/', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'movie_id': id,\n        'user_id': userid\n      })\n    }).then(response => {\n      let req = response.json();\n      return req;\n    });\n  };\n\n  const services = streamMovie.slice(0, 3).map(service => {\n    console.log('******************************');\n    console.log(streamMovie);\n    console.log('******************************');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"streamLogo\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: service[0],\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: service[2],\n          alt: service[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  });\n  let genres = movie.genre + '';\n  genres = genres.split(',');\n  const allgenres = genres.map(i => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre\",\n      children: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-show-pg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-container-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"poster\",\n            src: movie.poster,\n            alt: `${movie.title} poster`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleButtonClick({\n              'movieID': movie._id,\n              'userID': userid\n            }),\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-desrip-show\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.imdbRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"allgenres\",\n            children: allgenres\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"languages: \", movie.languages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"streamContainerParent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Watch it here:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"streamContainer\",\n          children: services\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MovieSM, \"cva8lQDehzYZNhfxBD39bXSvnAU=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieSM;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieSM\");","map":{"version":3,"sources":["/Users/mart/Documents/code/cinemaSave/client/src/components/MovieSM.jsx"],"names":["useParams","React","useEffect","useState","movieFunctions","ReactSession","MovieSM","props","userid","get","id","movie","setMovie","streamMovie","setStreamMovie","getByID","then","response","console","log","res","data","handleButtonClick","e","fetch","method","headers","body","JSON","stringify","req","json","services","slice","map","service","genres","genre","split","allgenres","i","poster","title","_id","imdbRating","description","languages"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react'\nimport movieFunctions from \"../api/index\"\nimport { ReactSession } from 'react-client-session';\n\n// style sheets\nimport './moviesm.css';\n\nexport const MovieSM = (props) => {\n    const userid = ReactSession.get(\"userid\");\n    const { id } = useParams();\n    const [movie, setMovie] = useState([]);\n    const [streamMovie, setStreamMovie] = useState([]);\n    \n      useEffect(() => {\n        movieFunctions\n          .getByID({\n            'movie_id': id,\n            'user_id': userid\n          })\n          .then((response) => {\n              console.log('promise fulfilled')\n              let res = response.data\n              return res\n          })\n        .then((res) => {\n            setMovie(res.movie)\n            setStreamMovie(res.streamMovie)\n            console.log(res)\n          })\n      }, []);\n\n    const handleButtonClick = (e) => {\n      fetch('http://localhost:3060/authentication/profile/addpin/', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'movie_id': id,\n          'user_id': userid\n        })\n      }).then((response) => {\n        let req = response.json()\n        return req\n      })\n  }\n\n  const services = streamMovie.slice(0,3).map((service)=>{\n    console.log('******************************')\n    console.log(streamMovie)\n    console.log('******************************')\n    return(\n      <div className=\"streamLogo\">\n          <a href={service[0]}><img src={service[2]} alt={service[3]} /></a>\n      </div>\n    )\n  })\n\n  let genres = movie.genre + ''\n  genres = genres.split(',')\n \n  const allgenres = genres.map((i) => {\n    return (\n      <div className='genre'>\n        { i }\n      </div>)\n  });\n\n    return (\n      <div className=\"movie-show-pg\">\n        <div className=\"movie-container-col\">\n          <div className=\"movie-container-row\">\n            <div className=\"div-left\">\n              <img className=\"poster\" src={movie.poster} alt={`${movie.title} poster`} />\n              <button onClick={() => handleButtonClick({ 'movieID': movie._id, 'userID': userid })}>save</button>\n            </div>\n            <div className=\"movie-desrip-show\">\n              <h1>{movie.title}</h1>\n              <h3>{movie.imdbRating}</h3>\n              <div className=\"allgenres\">{allgenres}</div>\n              <h4>{movie.description}</h4>\n              <h5>languages: {movie.languages}</h5>\n            </div>\n          </div>\n          <div className=\"streamContainerParent\">\n              <h5>Watch it here:</h5>\n              <div className=\"streamContainer\">\n                {services}\n              </div>\n            </div>\n        </div>\n      </div>\n\n    );\n}\n"]},"metadata":{},"sourceType":"module"}