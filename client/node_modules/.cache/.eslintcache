[{"/Users/mart/Documents/code/cinemaSave/client/src/index.js":"1","/Users/mart/Documents/code/cinemaSave/client/src/App.js":"2","/Users/mart/Documents/code/cinemaSave/client/src/pages/Register.jsx":"3","/Users/mart/Documents/code/cinemaSave/client/src/pages/Profile.jsx":"4","/Users/mart/Documents/code/cinemaSave/client/src/pages/ShowIndMovie.jsx":"5","/Users/mart/Documents/code/cinemaSave/client/src/pages/Login.jsx":"6","/Users/mart/Documents/code/cinemaSave/client/src/pages/Home.jsx":"7","/Users/mart/Documents/code/cinemaSave/client/src/pages/ShowIndBoard.jsx":"8","/Users/mart/Documents/code/cinemaSave/client/src/components/Navbar.jsx":"9","/Users/mart/Documents/code/cinemaSave/client/src/api/index.js":"10","/Users/mart/Documents/code/cinemaSave/client/src/components/BoardPopup.jsx":"11","/Users/mart/Documents/code/cinemaSave/client/src/components/PinReccomendations.jsx":"12","/Users/mart/Documents/code/cinemaSave/client/src/components/EditBoardPopup.jsx":"13","/Users/mart/Documents/code/cinemaSave/client/src/components/BoardsProfile.jsx":"14","/Users/mart/Documents/code/cinemaSave/client/src/components/MovieSM.jsx":"15","/Users/mart/Documents/code/cinemaSave/client/src/scripts/image.js":"16"},{"size":1019,"mtime":1641422812333,"results":"17","hashOfConfig":"18"},{"size":322,"mtime":1641422812332,"results":"19","hashOfConfig":"18"},{"size":2620,"mtime":1642369151812,"results":"20","hashOfConfig":"18"},{"size":3477,"mtime":1642369146138,"results":"21","hashOfConfig":"18"},{"size":522,"mtime":1641422812334,"results":"22","hashOfConfig":"18"},{"size":2343,"mtime":1642369135226,"results":"23","hashOfConfig":"18"},{"size":491,"mtime":1642282020270,"results":"24","hashOfConfig":"18"},{"size":3882,"mtime":1642369163413,"results":"25","hashOfConfig":"18"},{"size":887,"mtime":1641422812333,"results":"26","hashOfConfig":"18"},{"size":902,"mtime":1642369091916,"results":"27","hashOfConfig":"18"},{"size":2167,"mtime":1642369180303,"results":"28","hashOfConfig":"18"},{"size":2887,"mtime":1642369212963,"results":"29","hashOfConfig":"18"},{"size":2606,"mtime":1642369192987,"results":"30","hashOfConfig":"18"},{"size":1455,"mtime":1642281882128,"results":"31","hashOfConfig":"18"},{"size":2696,"mtime":1642369200383,"results":"32","hashOfConfig":"18"},{"size":658,"mtime":1641422812334,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i92kbd",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mart/Documents/code/cinemaSave/client/src/index.js",[],"/Users/mart/Documents/code/cinemaSave/client/src/App.js",["75","76"],"import React, { useEffect, useState } from 'react'\n\nfunction App() {\n  console.log(React.version)\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Splash Page</h1>\n\n      <br/>\n      <a href=\"/register\">register</a>\n      <br/>\n      <a href=\"/login\">login</a>\n      <br />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mart/Documents/code/cinemaSave/client/src/pages/Register.jsx",["77"],"import React, { useEffect, useState } from 'react'\nimport { Navigate } from 'react-router-dom';\n\nfunction Register() {\n    \n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [registered, setRegister] = useState(false);\n    const [id, setID] = useState('');\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const user = { username, email, password };\n\n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/register/', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user)\n        }).then((response) => {\n            console.log('new user added');\n            let req = response.json()\n            return req\n        }).then((req) => {\n            setID(req);\n        }).then((req) => {\n            setRegister(true);\n        })\n    }\n  \n    if (registered === true && id !== \" \")  {\n        return <Navigate push to={{\n            pathname: `/profile/${id}`\n          }}\n        />\n    }\n\n  return (\n    <div className=\"register\">\n        <div class=\"welcome\">\n            <h1>Register</h1> \n        </div>\n        <form onSubmit={handleSubmit}>\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Username</label>\n                <input\n                      class=\"form-control\"\n                      type=\"text\"\n                      id=\"username\"\n                      name=\"username\"\n                      required\n                      onChange={(e) => setUsername(e.target.value)}\n                  />\n            </div>\n            <div class=\"mb-3\">\n                <label class=\"form-label\" for=\"email\">Email</label>\n                <input\n                      class=\"form-control\"\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      required\n                      onChange={(e) => setEmail(e.target.value)}\n                  />\n            </div>\n            <div class=\"mb-3\">\n                <label class=\"form-label\" for=\"password\">Password</label>\n                <input\n                      class=\"form-control\"\n                      type=\"password\"\n                      id=\"password\"\n                      name=\"password\"\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                />\n            </div>\n            <button class=\"btn btn-success\">Register</button>\n        </form>\n    </div>\n  );\n}\n\nexport default Register;","/Users/mart/Documents/code/cinemaSave/client/src/pages/Profile.jsx",["78","79","80"],"import { ReactSession } from 'react-client-session';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport movieFunctions from \"../api/index.js\";\nimport { BoardPopup } from '../components/BoardPopup.jsx';\nimport { BoardsProfile } from '../components/BoardsProfile';\nimport { Navbar } from '../components/Navbar.jsx';\n\n// style sheets\nimport './profile.css';\n\nfunction Profile() {\n  let userid = ReactSession.get(\"userid\")\n  const [pins, setPins] = useState([]);\n  const [boards, setBoards] = useState([]);\n  const [popupval, setPopupVal] = useState(Boolean);\n\n  useEffect(() => {\n    movieFunctions\n      .getProfile(userid)\n      .then((response) => {\n        console.log('promise fulfilled')\n        return response.data\n      })\n      .then((response) => {\n        try {\n          setPins(response.pins)\n          setBoards(response.boards)\n        } catch (e) {\n          console.log(e)\n        }\n      })\n  }, []);\n\n  const handleShareButton = () => {\n    const userProfileLink = document.getElementById(\"userProfileLink\")\n    userProfileLink.select();\n    navigator.clipboard.writeText(userProfileLink.value);\n  }\n\n  const handleButtonClick = (props) => {\n    \n    fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/deletepin/', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(props)\n    }).then((response) => {\n      response = response.json()\n      return response\n    }).then((data) => {\n      try {\n        setPins(data.pins)\n        setBoards(data.boards)\n      } catch (e) {\n        console.log(e)\n      }\n    })\n  }\n\n  const handleAddButton = () => {\n    setPopupVal(true)\n  }\n\n  const allPins = pins.slice(0).reverse().map((i) => {\n      return (\n        <div className='movie-contianer-profile'>\n          <img src={i.poster} alt={`${i.title} poster`} className='poster' />\n          <div className='movie-descrip'>\n            <h3>{i.title}</h3>\n            <h5>imdb: {i.imdbRating} </h5>\n            <h5>genre(s): {i.genre} </h5>\n          </div>\n          <br />\n          <button className='removeBtn' onClick={() => handleButtonClick({ 'movieID': i._id, 'userID': userid })}>remove</button>\n        </div>)\n  });\n\n    return (\n      <div className=\"profile pgMargin\">\n        <Navbar />\n        <div className='header'>\n          <input id=\"userProfileLink\" value={window.location.href} type=\"text\" hidden />\n          <img className='profile-img' src=\"https://res.cloudinary.com/dr0ofxgkz/image/upload/v1640501510/cinema-save/theater-img_w5f8yz.jpg\" alt=\"profile-pic\" />\n          <div className='share'>\n            <h1>{ReactSession.get(\"username\")}</h1>\n            <img onClick={handleShareButton} src=\"https://res.cloudinary.com/dr0ofxgkz/image/upload/v1640736464/cinema-save/logo/share_lre6s2.png\" alt=\"share-logo\" />\n          </div>\n        </div>\n        <div>\n          <div className='boards-header'>\n            <div>\n              <h3>Boards</h3>\n            </div>\n            <div><button className='addBtn' onClick={handleAddButton} >+</button></div>\n          </div>\n          <BoardsProfile data={ userid } />\n          <BoardPopup value={ popupval } />\n        </div>\n        <hr />\n        <div className='all-pins-profile'>\n          <h2>all pins</h2>\n          <div className='movies-contianer'>\n              {allPins}\n          </div>\n        </div>\n      </div>\n      );\n}\n  \nexport default Profile;\n  \n","/Users/mart/Documents/code/cinemaSave/client/src/pages/ShowIndMovie.jsx",[],"/Users/mart/Documents/code/cinemaSave/client/src/pages/Login.jsx",[],"/Users/mart/Documents/code/cinemaSave/client/src/pages/Home.jsx",[],"/Users/mart/Documents/code/cinemaSave/client/src/pages/ShowIndBoard.jsx",["81","82","83","84","85"],"import { ReactSession } from 'react-client-session';\nimport React, { useEffect, useState } from 'react';\nimport movieFunctions from \"../api/index.js\";\nimport { EditBoardPopup } from '../components/EditBoardPopup.jsx';\nimport { Navbar } from '../components/Navbar.jsx';\nimport { PinReccomendations } from '../components/PinReccomendations.jsx';\n\n// style sheets\nimport './profile.css';\n\nfunction ShowIndBoard() {\n    const userid = ReactSession.get(\"userid\");\n    let boardID = window.location.pathname.split('/board/')[1];\n    const [board, setBoard] = useState([]);\n    const [pins, setPins] = useState([]);\n    const [showPopup, setShowPopup] = useState(Boolean);\n\n    const handleSave = (props) => {\n\n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/addpin/', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(props)\n        }).then((response) => {\n            return response.json()\n        }).then((response) => {\n            setPins(response.pins)\n        })\n    }\n\n    const handleRemove = (props) => {\n\n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/deletepin/', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(props)\n        })\n        .then((response) => {\n            response = response.json()\n            return response\n        }).then((data) => {\n            setBoard(data.boards)\n            setPins(data.pins)\n        })\n    }\n\n    const handleEdit = () => { \n        setShowPopup(true)\n    }\n\n    useEffect(() => {\n        movieFunctions\n            .getProfileBoard(userid, boardID)\n            .then((response) => {\n                return response.data\n            })\n            .then((response) => {\n                setBoard(response)\n                setPins(response.pins)\n            })\n    }, []);\n\n\n    const [movie, setMovies] = useState([]);\n    useEffect(() => {\n        movieFunctions\n            .getAll(userid)\n            .then((response) => {\n                setMovies(response.data)\n            })\n    }, []);\n\n    const boardPins = pins.slice(0).reverse().map(function (movie) {\n        return (\n       <div className='board-movies'>\n           <img src={movie.poster} alt={ `${movie.title} poster`} className='poster'/>\n            <div className='movie-descrip'>\n                <h3>{movie.title}</h3>\n                <h5>imdb: { movie.imdbRating } </h5>\n                <h5>genre(s): { movie.genre } </h5>\n            </div>\n            <button className='save-btn' onClick={() => handleRemove({ 'movieID': movie._id, 'userID': userid, 'boardID': boardID })}>remove</button>\n       </div>\n        )\n    })\n\n  return (\n    <div>\n        <Navbar />\n          <div className=\"showBoard\">\n            <div className='menu'>\n                <button onClick={handleEdit}>edit board</button>\n                  <EditBoardPopup value={ showPopup } data={ { 'userID': userid, 'boardID': boardID } }/>  \n            </div>\n            \n            <h1>{board.title} Board</h1>\n            <h3>{board.description}</h3>\n              \n            <Pins pins={pins} component={ boardPins }/>\n\n            <h2>Here are some suggestions</h2>\n            <div className='movies-contianer'>\n                <PinReccomendations userid= { userid }/>\n            </div>\n        </div>\n    </div>\n  );\n}\n\n\nfunction Pins(props) {\n    const pins = props.pins\n    {\n        if (pins.length === 0) {\n            return (\n                <div>\n                    <p>get started by adding pins to this board!</p>\n                </div>\n            )\n        } else {\n            return (\n                <div className='boards-container'>\n                    {props.component}\n                </div>\n            )\n        }\n    }\n\n}\n\nexport default ShowIndBoard;","/Users/mart/Documents/code/cinemaSave/client/src/components/Navbar.jsx",[],"/Users/mart/Documents/code/cinemaSave/client/src/api/index.js",["86"],"\nimport axios from 'axios';\n\nconst url = 'https://enigmatic-sierra-36050.herokuapp.com/';\nconst movie_url = 'movie/'\nconst home_url = 'home/'\nconst profile_url = 'authentication/profile/'\nconst board_url = 'getboard/'\nconst board_id_url = 'getboard/id'\n\nconst getAll = (user_id) => {\n    return axios.post(url+home_url, {userid: user_id})\n}\n\nconst getByID = (movie_id, user_id) => {\n    let new_url = url + movie_url + movie_id\n    return axios.post(new_url, {movie_id, user_id})\n}\n\nconst getProfile = (user_id, board_id) => { \n    return axios.post(url+profile_url, {user_id, board_id})\n}\n\nconst getProfileBoards = (user_id) => { \n    return axios.post(url+profile_url+board_url, {user_id})\n}\n\nconst getProfileBoard = (user_id, board_id) => { \n    return axios.post(url+profile_url+board_id_url, {user_id, board_id})\n}\n\n\nexport default { getAll, getByID, getProfile, getProfileBoards, getProfileBoard}","/Users/mart/Documents/code/cinemaSave/client/src/components/BoardPopup.jsx",[],"/Users/mart/Documents/code/cinemaSave/client/src/components/PinReccomendations.jsx",["87"],"import React, { useEffect, useState } from 'react'\n// import { Navigate } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport movieFunctions from \"../api/index.js\"\nimport { MovieSM } from '../components/MovieSM';\n\n// style sheets\nimport '../pages/home.css';\n\nexport const PinReccomendations = (props) => {\n    const handleMovieID = (props) => {\n    const id = props;\n          \n    fetch('https://enigmatic-sierra-36050.herokuapp.com/movie/id', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ id })\n    }).then((response) => {\n        let req = response.json()\n        return req\n    }).then((req) => {\n        if (req !== undefined) {\n        <Route to={`/movie/:${id}`} component={MovieSM} />\n        }\n    })\n    }\n      \n    const handleButtonClick = (props) => {\n          \n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/addpin/', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(props)\n        }).then((response) => {\n          let req = response.json()\n          return req\n        })\n      }\n\n    const userid = props.userid;\n    const [movie, setMovies] = useState([]);\n    const [moveieSubset, setMovieSubset] = useState([]);\n    const [subsetSlice, setSubsetSlice] = useState(Number);\n  \n    useEffect(() => {\n      movieFunctions\n        .getAll(userid)\n        .then((response) => {\n          console.log('promise fulfilled')\n          setMovies(response.data)\n          setMovieSubset(response.data.splice(0, 50));\n          setSubsetSlice(50);\n        })\n    }, []);\n\n    const handleLoadMore = () =>{\n      let newSubset = subsetSlice + 50;\n      let newMovies = movie.slice(subsetSlice, newSubset) \n\n      if(newSubset < movie.length){\n        setSubsetSlice(newSubset)\n        setMovieSubset(newMovies)\n      }\n    }\n\n    const movies = moveieSubset.map((i) => {\n        return (\n            <div className='movie-container'>\n                <Link to={`/movie/${i._id}`} onClick={() => handleMovieID(i._id)} style={{ textDecoration: 'none', color:'black'}}><img src={i.poster} alt={ `${i.title} poster`} className='poster'/></Link>\n                <div className='movie-descrip'>\n                    <h3>{i.title}</h3>\n                    <h5>imdb: { i.imdbRating } </h5>\n                    <h5>genre(s): { i.genre } </h5>\n                </div>\n                <div className='save-btn-container'><button className='save-btn' onClick={() => handleButtonClick({ 'movieID': i._id, 'userID': userid })}></button></div>\n            </div>)\n    });\n    \n    return (\n        <div className='pinrec'>\n          <div className='movies-contianer'>\n              { movies }\n          </div>\n\n          <button onClick={handleLoadMore}>Load More</button>\n        </div>\n    )\n}\n","/Users/mart/Documents/code/cinemaSave/client/src/components/EditBoardPopup.jsx",["88"],"import React, { useState } from 'react';\nimport { ReactSession } from 'react-client-session';\n\nexport const EditBoardPopup = (props) => {\n    const [boardname, setBoardName] = useState('');\n    const [boarddescrip, setBoardDescrip] = useState('');\n    const boardID = window.location.pathname.split('/board/')[1];\n    const userid = ReactSession.get(\"userid\");\n\n    let showPopup = props.value;\n    let data = props.data;\n\n    if (showPopup) {\n        const handleSaveButton = () => { \n            const data = {\n                'userID': userid,\n                'boardID': boardID,\n                'title': boardname,\n                'description': boarddescrip\n            }\n    \n            fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/editboard/', {\n                method: 'POST',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(data)\n            }).then((response) => {\n                return response.json()\n            })\n        }\n\n        const handleDelete = () => { \n            const data = {\n                'userID': userid,\n                'boardID': boardID,\n            }\n    \n            fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/deleteboard/', {\n                method: 'POST',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(data)\n            }).then((response) => {\n                return response.json()\n            })\n        }\n    \n        return (\n            <div>\n                <div><button onClick={handleDelete}>delete board</button></div>\n                <div>\n                    <label htmlFor=\"boardname\">Change your board's name</label>\n                    <br />\n                    <input\n                        type=\"text\"\n                        id='boardname'\n                        onChange={(e) => setBoardName(e.target.value)}\n                    />\n                    <br />\n                    <br />\n                    <label htmlFor=\"boarddescrip\">Change your board's a description</label>\n                    <br />\n                    <input\n                        type=\"text\"\n                        id='boarddescrip'\n                        onChange={(e) => setBoardDescrip(e.target.value)}\n                    />\n                    <br />\n                    <br />\n                    <button onClick={handleSaveButton}> save </button>\n                </div>\n            </div>\n        )\n    } else { \n        return (\n            <div>\n            </div>\n        )\n    }\n}\n","/Users/mart/Documents/code/cinemaSave/client/src/components/BoardsProfile.jsx",["89","90","91"],"import React, { useEffect, useState } from 'react';\nimport movieFunctions from \"../api/index.js\";\nimport { Link } from 'react-router-dom';\nimport {images} from '../scripts/image.js'\n\nexport const BoardsProfile = (props) => {\n    const userid = props.data;\n    const [boards, setBoards] = useState([]);\n\n    useEffect(() => {\n        movieFunctions\n          .getProfileBoards(userid)\n          .then((response) => {\n            console.log('promise fulfilled')\n            return response.data\n          })\n        .then((response) => {\n            setBoards(response.boards)\n            console.log(response)\n          })\n    }, []);\n    \n    const allBoards = boards.map((i) => {\n        let bkImg = false;\n        let imgsrc = null;\n        let imgalt = null;\n        \n        if (i.pins[0].poster != '') {\n            imgsrc = i.pins[0].poster;\n            imgalt = i.pins.title\n        } else { \n            let index = Math.floor(Math.random() * 6)\n            imgsrc = images[index];\n            imgalt = 'theater image';\n        }\n        \n        return (\n            <div className='board-contianer-profile'>\n                <img className=\"poster\" src={ imgsrc } alt={ imgalt } />\n                <Link to={`/profile/${userid}/board/${i._id}`}>\n                    <h3>{ i.title }</h3>\n                </Link>\n            </div>)\n      });\n\n    return (\n        <div className='boards-container'>\n            {allBoards}\n        </div>\n    )\n}\n","/Users/mart/Documents/code/cinemaSave/client/src/components/MovieSM.jsx",["92"],"import { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react'\nimport movieFunctions from \"../api/index\"\nimport { ReactSession } from 'react-client-session';\n\n// style sheets\nimport './moviesm.css';\n\nexport const MovieSM = (props) => {\n    const userid = ReactSession.get(\"userid\");\n    const { id } = useParams();\n    const [movie, setMovie] = useState([]);\n    const [streamMovie, setStreamMovie] = useState([]);\n    \n      useEffect(() => {\n        movieFunctions\n          .getByID({\n            'movie_id': id,\n            'user_id': userid\n          })\n          .then((response) => {\n              console.log('promise fulfilled')\n              let res = response.data\n              return res\n          })\n        .then((res) => {\n            setMovie(res.movie)\n            setStreamMovie(res.streamMovie)\n          })\n      }, []);\n\n    const handleButtonClick = (e) => {\n      fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/addpin/', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'movie_id': id,\n          'user_id': userid\n        })\n      }).then((response) => {\n        let req = response.json()\n        return req\n      })\n  }\n\n  const services = streamMovie.slice(0,3).map((service)=>{\n    return(\n      <div className=\"streamLogo\">\n          <a href={service[0]}><img src={service[2]} alt={service[3]} /></a>\n      </div>\n    )\n  })\n\n  let genres = movie.genre + ''\n  genres = genres.split(',')\n \n  const allgenres = genres.map((i) => {\n    return (\n      <div className='genre'>\n        { i }\n      </div>)\n  });\n\n    return (\n      <div className=\"movie-show-pg\">\n        <div className=\"movie-container-col\">\n          <div className=\"movie-container-row\">\n            <div className=\"div-left\">\n              <img className=\"poster\" src={movie.poster} alt={`${movie.title} poster`} />\n              <div className='save-btn-container'><button className='save-btn' onClick={() => handleButtonClick({ 'movieID': movie._id, 'userID': userid })}></button></div>\n            </div>\n            <div className=\"movie-desrip-show\">\n              <h1>{movie.title}</h1>\n              <h3>{movie.imdbRating}</h3>\n              <div className=\"allgenres\">{allgenres}</div>\n              <h4>{movie.description}</h4>\n              <h5>languages: {movie.languages}</h5>\n            </div>\n          </div>\n          <div className=\"streamContainerParent\">\n              <h5>Watch it here:</h5>\n              <div className=\"streamContainer\">\n                {services}\n              </div>\n            </div>\n        </div>\n      </div>\n\n    );\n}\n","/Users/mart/Documents/code/cinemaSave/client/src/scripts/image.js",[],{"ruleId":"93","severity":1,"message":"94","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"97","line":1,"column":28,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"94","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"98","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"99","line":15,"column":10,"nodeType":"95","messageId":"96","endLine":15,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":33,"column":6,"nodeType":"102","endLine":33,"endColumn":8,"suggestions":"103"},{"ruleId":"93","severity":1,"message":"104","line":18,"column":11,"nodeType":"95","messageId":"96","endLine":18,"endColumn":21},{"ruleId":"100","severity":1,"message":"105","line":61,"column":8,"nodeType":"102","endLine":61,"endColumn":10,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"107","line":64,"column":12,"nodeType":"95","messageId":"96","endLine":64,"endColumn":17},{"ruleId":"100","severity":1,"message":"101","line":71,"column":8,"nodeType":"102","endLine":71,"endColumn":10,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":113,"column":5,"nodeType":"111","messageId":"112","endLine":127,"endColumn":6},{"ruleId":"113","severity":1,"message":"114","line":33,"column":1,"nodeType":"115","endLine":33,"endColumn":81},{"ruleId":"100","severity":1,"message":"101","line":54,"column":8,"nodeType":"102","endLine":54,"endColumn":10,"suggestions":"116"},{"ruleId":"93","severity":1,"message":"117","line":11,"column":9,"nodeType":"95","messageId":"96","endLine":11,"endColumn":13},{"ruleId":"100","severity":1,"message":"101","line":21,"column":8,"nodeType":"102","endLine":21,"endColumn":10,"suggestions":"118"},{"ruleId":"93","severity":1,"message":"119","line":24,"column":13,"nodeType":"95","messageId":"96","endLine":24,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":28,"column":30,"nodeType":"122","messageId":"123","endLine":28,"endColumn":32},{"ruleId":"100","severity":1,"message":"124","line":30,"column":10,"nodeType":"102","endLine":30,"endColumn":12,"suggestions":"125"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'boards' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'handleSave' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'boardID' and 'userid'. Either include them or remove the dependency array.",["127"],"'movie' is assigned a value but never used.",["128"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["129"],"'data' is assigned a value but never used.",["130"],"'bkImg' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'id' and 'userid'. Either include them or remove the dependency array.",["131"],{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"132","fix":"136"},{"desc":"132","fix":"137"},{"desc":"132","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [userid]",{"range":"141","text":"142"},"Update the dependencies array to be: [boardID, userid]",{"range":"143","text":"144"},{"range":"145","text":"142"},{"range":"146","text":"142"},{"range":"147","text":"142"},"Update the dependencies array to be: [id, userid]",{"range":"148","text":"149"},[961,963],"[userid]",[1926,1928],"[boardID, userid]",[2148,2150],[1676,1678],[630,632],[871,873],"[id, userid]"]