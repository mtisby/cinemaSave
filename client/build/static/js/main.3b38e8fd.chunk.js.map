{"version":3,"sources":["App.js","components/Navbar.jsx","api/index.js","components/MovieSM.jsx","components/PinReccomendations.jsx","pages/Home.jsx","components/BoardPopup.jsx","scripts/image.js","components/BoardsProfile.jsx","pages/Profile.jsx","pages/Register.jsx","pages/Login.jsx","pages/ShowIndMovie.jsx","components/EditBoardPopup.jsx","pages/ShowIndBoard.jsx","index.js"],"names":["App","console","log","React","version","className","href","Navbar","userid","ReactSession","get","to","src","alt","type","url","profile_url","user_id","axios","post","movie_id","new_url","board_id","MovieSM","props","id","useParams","useState","movie","setMovie","streamMovie","setStreamMovie","useEffect","movieFunctions","then","response","data","res","services","slice","map","service","genres","genre","allgenres","split","i","poster","title","onClick","_id","fetch","method","headers","body","JSON","stringify","json","imdbRating","description","languages","PinReccomendations","setMovies","moveieSubset","setMovieSubset","Number","subsetSlice","setSubsetSlice","splice","movies","req","undefined","handleMovieID","style","textDecoration","color","handleButtonClick","newSubset","newMovies","length","Home","BoardPopup","boardname","setBoardName","boarddescrip","setBoardDescrip","boardID","setBoardID","Boolean","popupBool","setPopupBool","pathname","value","htmlFor","onChange","e","target","images","BoardsProfile","boards","setBoards","allBoards","imgsrc","imgalt","pins","index","Math","floor","random","Profile","setPins","popupval","setPopupVal","allPins","reverse","window","location","hidden","userProfileLink","document","getElementById","select","navigator","clipboard","writeText","Register","username","setUsername","email","setEmail","password","setPassword","registered","setRegister","setID","push","class","onSubmit","preventDefault","user","name","required","for","Login","loggedin","setLogin","set","bind","this","ShowMovie","EditBoardPopup","showPopup","Pins","component","ShowIndBoard","board","setBoard","setShowPopup","boardPins","rootElement","render","path","element"],"mappings":"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","file":"static/js/main.3b38e8fd.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nfunction App() {\n  console.log(React.version)\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Splash Page</h1>\n\n      <br/>\n      <a href=\"/register\">register</a>\n      <br/>\n      <a href=\"/login\">login</a>\n      <br />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { ReactSession } from 'react-client-session';\n// style sheets\nimport './navbar.css';\n\nexport const Navbar = () => {\n    const userid = ReactSession.get(\"userid\");\n    return (\n        <div className='navbar'>\n            <div className='home'>\n                <Link className='navbar-link' to=\"/home\"><img src=\"https://res.cloudinary.com/dr0ofxgkz/image/upload/v1640657226/cinema-save/logo/266805495_593009852001789_9140452071824781120_n_obfvmh.png\" alt=\"cinema-save-logo\" /> </Link>\n                <Link className='navbar-link' to=\"/home\">\n                    <p>Home</p>\n                </Link>\n            </div>\n\n            <div><input type=\"search\" /></div>\n\n            <div>\n                <Link className='navbar-link' to={`/profile/${userid}`}>Profile</Link>\n            </div>\n        </div>\n    )\n}\n","\nimport axios from 'axios';\n\nconst url = 'https://enigmatic-sierra-36050.herokuapp.com/';\nconst movie_url = 'movie/'\nconst home_url = 'home/'\nconst profile_url = 'authentication/profile/'\nconst board_url = 'getboard/'\nconst board_id_url = 'getboard/id'\n\nconst getAll = (user_id) => {\n    return axios.post(url+home_url, {userid: user_id})\n}\n\nconst getByID = (movie_id, user_id) => {\n    let new_url = url + movie_url + movie_id\n    return axios.post(new_url, {movie_id, user_id})\n}\n\nconst getProfile = (user_id, board_id) => { \n    return axios.post(url+profile_url, {user_id, board_id})\n}\n\nconst getProfileBoards = (user_id) => { \n    return axios.post(url+profile_url+board_url, {user_id})\n}\n\nconst getProfileBoard = (user_id, board_id) => { \n    return axios.post(url+profile_url+board_id_url, {user_id, board_id})\n}\n\n\nexport default { getAll, getByID, getProfile, getProfileBoards, getProfileBoard}","import { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react'\nimport movieFunctions from \"../api/index\"\nimport { ReactSession } from 'react-client-session';\n\n// style sheets\nimport './moviesm.css';\n\nexport const MovieSM = (props) => {\n    const userid = ReactSession.get(\"userid\");\n    const { id } = useParams();\n    const [movie, setMovie] = useState([]);\n    const [streamMovie, setStreamMovie] = useState([]);\n    \n      useEffect(() => {\n        movieFunctions\n          .getByID({\n            'movie_id': id,\n            'user_id': userid\n          })\n          .then((response) => {\n              console.log('promise fulfilled')\n              let res = response.data\n              return res\n          })\n        .then((res) => {\n            setMovie(res.movie)\n            setStreamMovie(res.streamMovie)\n          })\n      }, []);\n\n    const handleButtonClick = (e) => {\n      fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/addpin/', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'movie_id': id,\n          'user_id': userid\n        })\n      }).then((response) => {\n        let req = response.json()\n        return req\n      })\n  }\n\n  const services = streamMovie.slice(0,3).map((service)=>{\n    return(\n      <div className=\"streamLogo\">\n          <a href={service[0]}><img src={service[2]} alt={service[3]} /></a>\n      </div>\n    )\n  })\n\n  let genres = movie.genre + ''\n  genres = genres.split(',')\n \n  const allgenres = genres.map((i) => {\n    return (\n      <div className='genre'>\n        { i }\n      </div>)\n  });\n\n    return (\n      <div className=\"movie-show-pg\">\n        <div className=\"movie-container-col\">\n          <div className=\"movie-container-row\">\n            <div className=\"div-left\">\n              <img className=\"poster\" src={movie.poster} alt={`${movie.title} poster`} />\n              <div className='save-btn-container'><button className='save-btn' onClick={() => handleButtonClick({ 'movieID': movie._id, 'userID': userid })}></button></div>\n            </div>\n            <div className=\"movie-desrip-show\">\n              <h1>{movie.title}</h1>\n              <h3>{movie.imdbRating}</h3>\n              <div className=\"allgenres\">{allgenres}</div>\n              <h4>{movie.description}</h4>\n              <h5>languages: {movie.languages}</h5>\n            </div>\n          </div>\n          <div className=\"streamContainerParent\">\n              <h5>Watch it here:</h5>\n              <div className=\"streamContainer\">\n                {services}\n              </div>\n            </div>\n        </div>\n      </div>\n\n    );\n}\n","import React, { useEffect, useState } from 'react'\n// import { Navigate } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport movieFunctions from \"../api/index.js\"\nimport { MovieSM } from '../components/MovieSM';\n\n// style sheets\nimport '../pages/home.css';\n\nexport const PinReccomendations = (props) => {\n    const handleMovieID = (props) => {\n    const id = props;\n          \n    fetch('https://enigmatic-sierra-36050.herokuapp.com/movie/id', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ id })\n    }).then((response) => {\n        let req = response.json()\n        return req\n    }).then((req) => {\n        if (req !== undefined) {\n        <Route to={`/movie/:${id}`} component={MovieSM} />\n        }\n    })\n    }\n      \n    const handleButtonClick = (props) => {\n          \n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/addpin/', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(props)\n        }).then((response) => {\n          let req = response.json()\n          return req\n        })\n      }\n\n    const userid = props.userid;\n    const [movie, setMovies] = useState([]);\n    const [moveieSubset, setMovieSubset] = useState([]);\n    const [subsetSlice, setSubsetSlice] = useState(Number);\n  \n    useEffect(() => {\n      movieFunctions\n        .getAll(userid)\n        .then((response) => {\n          console.log('promise fulfilled')\n          setMovies(response.data)\n          setMovieSubset(response.data.splice(0, 50));\n          setSubsetSlice(50);\n        })\n    }, []);\n\n    const handleLoadMore = () =>{\n      let newSubset = subsetSlice + 50;\n      let newMovies = movie.slice(subsetSlice, newSubset) \n\n      if(newSubset < movie.length){\n        setSubsetSlice(newSubset)\n        setMovieSubset(newMovies)\n      }\n    }\n\n    const movies = moveieSubset.map((i) => {\n        return (\n            <div className='movie-container'>\n                <Link to={`/movie/${i._id}`} onClick={() => handleMovieID(i._id)} style={{ textDecoration: 'none', color:'black'}}><img src={i.poster} alt={ `${i.title} poster`} className='poster'/></Link>\n                <div className='movie-descrip'>\n                    <h3>{i.title}</h3>\n                    <h5>imdb: { i.imdbRating } </h5>\n                    <h5>genre(s): { i.genre } </h5>\n                </div>\n                <div className='save-btn-container'><button className='save-btn' onClick={() => handleButtonClick({ 'movieID': i._id, 'userID': userid })}></button></div>\n            </div>)\n    });\n    \n    return (\n        <div className='pinrec'>\n          <div className='movies-contianer'>\n              { movies }\n          </div>\n\n          <button onClick={handleLoadMore}>Load More</button>\n        </div>\n    )\n}\n","import { ReactSession } from 'react-client-session';\nimport { Navbar } from '../components/Navbar.jsx';\nimport { PinReccomendations } from '../components/PinReccomendations.jsx';\n\n// style sheets\nimport './home.css';\n\nfunction Home() {\n  const userid = ReactSession.get(\"userid\");\n\n  return (\n    <div className=\"Home-Pg pgMargin\">\n      <Navbar />\n      <div className='movies-contianer'>\n        <PinReccomendations userid= { userid }/>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { ReactSession } from 'react-client-session';\nimport { Navigate } from 'react-router-dom';\n\nexport const BoardPopup = (props) => {\n    const [boardname, setBoardName] = useState('');\n    const [boarddescrip, setBoardDescrip] = useState('');\n    const [boardID, setBoardID] = useState('');\n    const [popupBool, setPopupBool] = useState(Boolean);\n    const userid = ReactSession.get(\"userid\");\n\n    const handleSaveButton = () => { \n        console.log(boardname)\n        const data = {\n            'title': boardname,\n            'description': boarddescrip,\n            'userID': userid\n        }\n\n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/addboard/', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data)\n        }).then((response) => {\n            return response.json()\n        }).then((response) => { \n            setBoardID(response)\n        }).then((response) => { \n            setPopupBool(true)\n        })\n    }\n\n    if (popupBool) { \n        \n        return <Navigate to={{\n            pathname: `/profile/${userid}/board/${boardID}`\n            }}\n        />\n    }\n\n    if (props.value) {\n        return (\n            <div>\n                <label htmlFor=\"boardname\">Name your board</label>\n                <br />\n                <input\n                    type=\"text\"\n                    id='boardname'\n                    onChange={(e) => setBoardName(e.target.value)}\n                />\n                <br />\n                <br />\n                <label htmlFor=\"boarddescrip\">Give your board a description</label>\n                <br />\n                <input\n                    type=\"text\"\n                    id='boarddescrip'\n                    onChange={(e) => setBoardDescrip(e.target.value)}\n                />\n                <br />\n                <br />\n                <button onClick={handleSaveButton}> save </button>\n            </div>\n        )\n    }\n    else { \n        return (\n            <div></div>\n        )\n    }\n}\n// onChange={(e) => setPassword(e.target.value)","let images = [\n    'https://res.cloudinary.com/dr0ofxgkz/image/upload/v1640501510/cinema-save/theater-img_w5f8yz.jpg',\n    'https://res.cloudinary.com/dr0ofxgkz/image/upload/v1640501509/cinema-save/theater-img2_cujja6.jpg',\n    'https://res.cloudinary.com/dr0ofxgkz/image/upload/v1640501512/cinema-save/popcorn-img_spun7w.jpg',\n    'https://res.cloudinary.com/dr0ofxgkz/image/upload/v1640501512/cinema-save/cinema-img1_x0r9az.jpg',\n    'https://res.cloudinary.com/dr0ofxgkz/image/upload/v1640501515/cinema-save/popcorn-img2_m3zdto.jpg',\n    'https://res.cloudinary.com/dr0ofxgkz/image/upload/v1640501514/cinema-save/camera-img_db30he.jpg'\n\n]\n\nexport {images}","import React, { useEffect, useState } from 'react';\nimport movieFunctions from \"../api/index.js\";\nimport { Link } from 'react-router-dom';\nimport {images} from '../scripts/image.js'\n\nexport const BoardsProfile = (props) => {\n    const userid = props.data;\n    const [boards, setBoards] = useState([]);\n\n    useEffect(() => {\n        movieFunctions\n          .getProfileBoards(userid)\n          .then((response) => {\n            console.log('promise fulfilled')\n            return response.data\n          })\n        .then((response) => {\n            setBoards(response.boards)\n            console.log(response)\n          })\n    }, []);\n    \n    const allBoards = boards.map((i) => {\n        let bkImg = false;\n        let imgsrc = null;\n        let imgalt = null;\n        \n        if (i.pins[0].poster != '') {\n            imgsrc = i.pins[0].poster;\n            imgalt = i.pins.title\n        } else { \n            let index = Math.floor(Math.random() * 6)\n            imgsrc = images[index];\n            imgalt = 'theater image';\n        }\n        \n        return (\n            <div className='board-contianer-profile'>\n                <img className=\"poster\" src={ imgsrc } alt={ imgalt } />\n                <Link to={`/profile/${userid}/board/${i._id}`}>\n                    <h3>{ i.title }</h3>\n                </Link>\n            </div>)\n      });\n\n    return (\n        <div className='boards-container'>\n            {allBoards}\n        </div>\n    )\n}\n","import { ReactSession } from 'react-client-session';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport movieFunctions from \"../api/index.js\";\nimport { BoardPopup } from '../components/BoardPopup.jsx';\nimport { BoardsProfile } from '../components/BoardsProfile';\nimport { Navbar } from '../components/Navbar.jsx';\n\n// style sheets\nimport './profile.css';\n\nfunction Profile() {\n  let userid = ReactSession.get(\"userid\")\n  const [pins, setPins] = useState([]);\n  const [boards, setBoards] = useState([]);\n  const [popupval, setPopupVal] = useState(Boolean);\n\n  useEffect(() => {\n    movieFunctions\n      .getProfile(userid)\n      .then((response) => {\n        console.log('promise fulfilled')\n        return response.data\n      })\n      .then((response) => {\n        try {\n          setPins(response.pins)\n          setBoards(response.boards)\n        } catch (e) {\n          console.log(e)\n        }\n      })\n  }, []);\n\n  const handleShareButton = () => {\n    const userProfileLink = document.getElementById(\"userProfileLink\")\n    userProfileLink.select();\n    navigator.clipboard.writeText(userProfileLink.value);\n  }\n\n  const handleButtonClick = (props) => {\n    \n    fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/deletepin/', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(props)\n    }).then((response) => {\n      response = response.json()\n      return response\n    }).then((data) => {\n      try {\n        setPins(data.pins)\n        setBoards(data.boards)\n      } catch (e) {\n        console.log(e)\n      }\n    })\n  }\n\n  const handleAddButton = () => {\n    setPopupVal(true)\n  }\n\n  const allPins = pins.slice(0).reverse().map((i) => {\n      return (\n        <div className='movie-contianer-profile'>\n          <img src={i.poster} alt={`${i.title} poster`} className='poster' />\n          <div className='movie-descrip'>\n            <h3>{i.title}</h3>\n            <h5>imdb: {i.imdbRating} </h5>\n            <h5>genre(s): {i.genre} </h5>\n          </div>\n          <br />\n          <button className='removeBtn' onClick={() => handleButtonClick({ 'movieID': i._id, 'userID': userid })}>remove</button>\n        </div>)\n  });\n\n    return (\n      <div className=\"profile pgMargin\">\n        <Navbar />\n        <div className='header'>\n          <input id=\"userProfileLink\" value={window.location.href} type=\"text\" hidden />\n          <img className='profile-img' src=\"https://res.cloudinary.com/dr0ofxgkz/image/upload/v1640501510/cinema-save/theater-img_w5f8yz.jpg\" alt=\"profile-pic\" />\n          <div className='share'>\n            <h1>{ReactSession.get(\"username\")}</h1>\n            <img onClick={handleShareButton} src=\"https://res.cloudinary.com/dr0ofxgkz/image/upload/v1640736464/cinema-save/logo/share_lre6s2.png\" alt=\"share-logo\" />\n          </div>\n        </div>\n        <div>\n          <div className='boards-header'>\n            <div>\n              <h3>Boards</h3>\n            </div>\n            <div><button className='addBtn' onClick={handleAddButton} >+</button></div>\n          </div>\n          <BoardsProfile data={ userid } />\n          <BoardPopup value={ popupval } />\n        </div>\n        <hr />\n        <div className='all-pins-profile'>\n          <h2>all pins</h2>\n          <div className='movies-contianer'>\n              {allPins}\n          </div>\n        </div>\n      </div>\n      );\n}\n  \nexport default Profile;\n  \n","import React, { useEffect, useState } from 'react'\nimport { Navigate } from 'react-router-dom';\n\nfunction Register() {\n    \n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [registered, setRegister] = useState(false);\n    const [id, setID] = useState('');\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const user = { username, email, password };\n\n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/register/', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user)\n        }).then((response) => {\n            console.log('new user added');\n            let req = response.json()\n            return req\n        }).then((req) => {\n            setID(req);\n        }).then((req) => {\n            setRegister(true);\n        })\n    }\n  \n    if (registered === true && id !== \" \")  {\n        return <Navigate push to={{\n            pathname: `/profile/${id}`\n          }}\n        />\n    }\n\n  return (\n    <div className=\"register\">\n        <div class=\"welcome\">\n            <h1>Register</h1> \n        </div>\n        <form onSubmit={handleSubmit}>\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Username</label>\n                <input\n                      class=\"form-control\"\n                      type=\"text\"\n                      id=\"username\"\n                      name=\"username\"\n                      required\n                      onChange={(e) => setUsername(e.target.value)}\n                  />\n            </div>\n            <div class=\"mb-3\">\n                <label class=\"form-label\" for=\"email\">Email</label>\n                <input\n                      class=\"form-control\"\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      required\n                      onChange={(e) => setEmail(e.target.value)}\n                  />\n            </div>\n            <div class=\"mb-3\">\n                <label class=\"form-label\" for=\"password\">Password</label>\n                <input\n                      class=\"form-control\"\n                      type=\"password\"\n                      id=\"password\"\n                      name=\"password\"\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                />\n            </div>\n            <button class=\"btn btn-success\">Register</button>\n        </form>\n    </div>\n  );\n}\n\nexport default Register;","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom';\n\nimport {ReactSession} from 'react-client-session';\n\n\nfunction Login(props) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [loggedin, setLogin] = useState(false);\n    const [id, setID] = useState('');\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const user = { username, password };\n\n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/login/', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user)\n        }).then((response) => {\n            console.log('logged in');\n            let req = response.json()\n            return req\n        }).then((req) => {\n            if (req !== 'success') {\n                setID(req.user_id);\n                setLogin(true);\n                ReactSession.set(\"username\", req.username);\n                ReactSession.set(\"userid\", req.user_id);\n            }\n        })\n    }\n\n    if (loggedin === true && id !== \" \") {\n        return <Navigate push to={{\n            pathname: `/profile/${id}`\n          }}\n        />\n    }\n  \n  return (\n    <div className=\"login\">\n        <div class=\"welcome\">\n            <h1>Login</h1> \n        </div>\n        <form onSubmit={handleSubmit.bind(this)}>\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Username</label>\n                <input\n                      class=\"form-control\"\n                      type=\"text\"\n                      id=\"username\"\n                      name=\"username\"\n                      required\n                      onChange={(e) => setUsername(e.target.value)}\n                  />\n            </div>\n            <div class=\"mb-3\">\n                <label class=\"form-label\" for=\"password\">Password</label>\n                <input\n                      class=\"form-control\"\n                      type=\"password\"\n                      id=\"password\"\n                      name=\"password\"\n                      required\n                      onChange={(e) => setPassword(e.target.value)}\n                />\n            </div>\n            <button class=\"btn btn-success\">Login</button>\n          </form>\n    </div>\n  );\n}\n\nexport default Login;","import { MovieSM } from '../components/MovieSM'; \nimport { Navbar } from '../components/Navbar';\nimport { PinReccomendations } from '../components/PinReccomendations.jsx';\nimport { ReactSession } from 'react-client-session';\n\n\nfunction ShowMovie() {\n  const userid = ReactSession.get(\"userid\");\n\n    return (\n      <div className=\"showMovie pgMargin\">\n          <Navbar />\n          <MovieSM />\n          <hr />\n          <PinReccomendations userid= { userid } />\n        </div>\n      );\n}\n  \nexport default ShowMovie;\n  \n","import React, { useState } from 'react';\nimport { ReactSession } from 'react-client-session';\n\nexport const EditBoardPopup = (props) => {\n    const [boardname, setBoardName] = useState('');\n    const [boarddescrip, setBoardDescrip] = useState('');\n    const boardID = window.location.pathname.split('/board/')[1];\n    const userid = ReactSession.get(\"userid\");\n\n    let showPopup = props.value;\n    let data = props.data;\n\n    if (showPopup) {\n        const handleSaveButton = () => { \n            const data = {\n                'userID': userid,\n                'boardID': boardID,\n                'title': boardname,\n                'description': boarddescrip\n            }\n    \n            fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/editboard/', {\n                method: 'POST',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(data)\n            }).then((response) => {\n                return response.json()\n            })\n        }\n\n        const handleDelete = () => { \n            const data = {\n                'userID': userid,\n                'boardID': boardID,\n            }\n    \n            fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/deleteboard/', {\n                method: 'POST',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(data)\n            }).then((response) => {\n                return response.json()\n            })\n        }\n    \n        return (\n            <div>\n                <div><button onClick={handleDelete}>delete board</button></div>\n                <div>\n                    <label htmlFor=\"boardname\">Change your board's name</label>\n                    <br />\n                    <input\n                        type=\"text\"\n                        id='boardname'\n                        onChange={(e) => setBoardName(e.target.value)}\n                    />\n                    <br />\n                    <br />\n                    <label htmlFor=\"boarddescrip\">Change your board's a description</label>\n                    <br />\n                    <input\n                        type=\"text\"\n                        id='boarddescrip'\n                        onChange={(e) => setBoardDescrip(e.target.value)}\n                    />\n                    <br />\n                    <br />\n                    <button onClick={handleSaveButton}> save </button>\n                </div>\n            </div>\n        )\n    } else { \n        return (\n            <div>\n            </div>\n        )\n    }\n}\n","import { ReactSession } from 'react-client-session';\nimport React, { useEffect, useState } from 'react';\nimport movieFunctions from \"../api/index.js\";\nimport { EditBoardPopup } from '../components/EditBoardPopup.jsx';\nimport { Navbar } from '../components/Navbar.jsx';\nimport { PinReccomendations } from '../components/PinReccomendations.jsx';\n\n// style sheets\nimport './profile.css';\n\nfunction ShowIndBoard() {\n    const userid = ReactSession.get(\"userid\");\n    let boardID = window.location.pathname.split('/board/')[1];\n    const [board, setBoard] = useState([]);\n    const [pins, setPins] = useState([]);\n    const [showPopup, setShowPopup] = useState(Boolean);\n\n    const handleSave = (props) => {\n\n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/addpin/', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(props)\n        }).then((response) => {\n            return response.json()\n        }).then((response) => {\n            setPins(response.pins)\n        })\n    }\n\n    const handleRemove = (props) => {\n\n        fetch('https://enigmatic-sierra-36050.herokuapp.com/authentication/profile/deletepin/', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(props)\n        })\n        .then((response) => {\n            response = response.json()\n            return response\n        }).then((data) => {\n            setBoard(data.boards)\n            setPins(data.pins)\n        })\n    }\n\n    const handleEdit = () => { \n        setShowPopup(true)\n    }\n\n    useEffect(() => {\n        movieFunctions\n            .getProfileBoard(userid, boardID)\n            .then((response) => {\n                return response.data\n            })\n            .then((response) => {\n                setBoard(response)\n                setPins(response.pins)\n            })\n    }, []);\n\n\n    const [movie, setMovies] = useState([]);\n    useEffect(() => {\n        movieFunctions\n            .getAll(userid)\n            .then((response) => {\n                setMovies(response.data)\n            })\n    }, []);\n\n    const boardPins = pins.slice(0).reverse().map(function (movie) {\n        return (\n       <div className='board-movies'>\n           <img src={movie.poster} alt={ `${movie.title} poster`} className='poster'/>\n            <div className='movie-descrip'>\n                <h3>{movie.title}</h3>\n                <h5>imdb: { movie.imdbRating } </h5>\n                <h5>genre(s): { movie.genre } </h5>\n            </div>\n            <button className='save-btn' onClick={() => handleRemove({ 'movieID': movie._id, 'userID': userid, 'boardID': boardID })}>remove</button>\n       </div>\n        )\n    })\n\n  return (\n    <div>\n        <Navbar />\n          <div className=\"showBoard\">\n            <div className='menu'>\n                <button onClick={handleEdit}>edit board</button>\n                  <EditBoardPopup value={ showPopup } data={ { 'userID': userid, 'boardID': boardID } }/>  \n            </div>\n            \n            <h1>{board.title} Board</h1>\n            <h3>{board.description}</h3>\n              \n            <Pins pins={pins} component={ boardPins }/>\n\n            <h2>Here are some suggestions</h2>\n            <div className='movies-contianer'>\n                <PinReccomendations userid= { userid }/>\n            </div>\n        </div>\n    </div>\n  );\n}\n\n\nfunction Pins(props) {\n    const pins = props.pins\n    {\n        if (pins.length === 0) {\n            return (\n                <div>\n                    <p>get started by adding pins to this board!</p>\n                </div>\n            )\n        } else {\n            return (\n                <div className='boards-container'>\n                    {props.component}\n                </div>\n            )\n        }\n    }\n\n}\n\nexport default ShowIndBoard;","import React from 'react';\nimport { render } from \"react-dom\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\n// style sheets\nimport './index.css';\n\n// pages\nimport App from './App';\nimport Home from './pages/Home';\nimport Profile from './pages/Profile'\nimport Register from './pages/Register'\nimport Login from './pages/Login'\nimport ShowMovie from './pages/ShowIndMovie'\nimport ShowIndBoard from './pages/ShowIndBoard'\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n    <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<App />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/profile/:id\" element={<Profile />} />\n          <Route path=\"/profile/:id/board/:id\" element={<ShowIndBoard />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/movie/:id\" element={<ShowMovie />} />\n        </Routes>\n    </BrowserRouter>,\n  rootElement   \n);\n"],"sourceRoot":""}